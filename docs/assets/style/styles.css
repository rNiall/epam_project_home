@charset "UTF-8";
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
@import url("https://fonts.googleapis.com/css?family=Oswald:300,400&subset=cyrillic");
@import url("https://fonts.googleapis.com/css?family=Source+Sans+Pro");
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/* Extra Small Devices, Phones */
/* Small Devices, Tablets */
/* Medium Devices, Desktops */
/* Large Devices, Wide Screens */
@font-face {
  font-family: FontAwesome;
  src: url("../fonts/FontAwesome.otf");
  font-style: normal; }

body {
  font-family: 'Oswald', sans-serif;
  font-size: 1rem;
  font-weight: 300; }

input {
  border: 0; }

ul {
  margin: 0;
  padding: 0;
  list-style: none; }

.wrapper {
  position: relative;
  width: 95%;
  margin: 0 auto; }
  @media only screen and (min-width: 768px) {
    .wrapper {
      width: 90%; } }

header {
  width: 100%; }
  header .menu {
    opacity: 0;
    -webkit-transform: translateY(-90px);
        -ms-transform: translateY(-90px);
            transform: translateY(-90px);
    -webkit-transition: all .3s ease-out;
    -o-transition: all .3s ease-out;
    transition: all .3s ease-out;
    position: absolute; }
    header .menu.is-visible {
      opacity: 1;
      width: 100%;
      -webkit-transform: translateY(0);
          -ms-transform: translateY(0);
              transform: translateY(0);
      -webkit-transition: -webkit-transform .3s ease-out;
      transition: -webkit-transform .3s ease-out;
      -o-transition: transform .3s ease-out;
      transition: transform .3s ease-out;
      transition: transform .3s ease-out, -webkit-transform .3s ease-out;
      z-index: 9; }
    @media only screen and (min-width: 768px) {
      header .menu {
        position: relative;
        -webkit-transform: translateY(0);
            -ms-transform: translateY(0);
                transform: translateY(0);
        opacity: 1; } }
  header nav.header_sp {
    background: #36c3d8; }
    @media only screen and (min-width: 768px) {
      header nav.header_sp {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-pack: justify;
            -ms-flex-pack: justify;
                justify-content: space-between;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap; } }
    header nav.header_sp a.header__logo {
      height: 28px;
      padding-left: 1.25rem; }
      header nav.header_sp a.header__logo img {
        padding: 3px 0; }
    @media only screen and (min-width: 768px) {
      header nav.header_sp .header_right {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        height: 28px; } }
    header nav.header_sp .header_right ul.header_links {
      list-style: none;
      margin: 0;
      padding: 0 0 0 1.4375rem;
      line-height: 28px;
      display: -webkit-inline-box;
      display: -ms-inline-flexbox;
      display: inline-flex; }
      @media only screen and (min-width: 768px) {
        header nav.header_sp .header_right ul.header_links {
          padding: 0; } }
      header nav.header_sp .header_right ul.header_links li {
        font-size: 15px; }
        @media only screen and (min-width: 768px) {
          header nav.header_sp .header_right ul.header_links li {
            font-size: 16px; } }
        header nav.header_sp .header_right ul.header_links li a {
          text-decoration: none;
          color: #fff;
          padding: .2rem .6rem; }
          @media only screen and (min-width: 768px) {
            header nav.header_sp .header_right ul.header_links li a {
              padding: .2rem 1rem; } }
        header nav.header_sp .header_right ul.header_links li:first-child a {
          padding-left: 0; }
          @media only screen and (min-width: 768px) {
            header nav.header_sp .header_right ul.header_links li:first-child a {
              padding: .2rem .6rem; } }
        header nav.header_sp .header_right ul.header_links li:last-child {
          margin-right: 0.875rem; }
    header nav.header_sp .header_right .user {
      background: #efefef;
      line-height: 28px;
      padding: 0 1.25rem 0 1.4375rem; }
      header nav.header_sp .header_right .user a {
        text-decoration: none;
        color: #454446;
        font-size: .9rem; }
        header nav.header_sp .header_right .user a::after {
          font-family: FontAwesome, serif;
          content: '\f0d7';
          margin-left: 15px;
          font-weight: normal; }
      header nav.header_sp .header_right .user .settings:after {
        font-family: FontAwesome, serif;
        content: '\f013';
        color: #79787a;
        margin-left: 15px;
        font-weight: normal; }
      header nav.header_sp .header_right .user .help:after {
        font-family: FontAwesome, serif;
        content: '\f059';
        color: #79787a;
        margin-left: 15px;
        font-weight: normal; }
  header .user_navigation {
    background: #efefef;
    padding: 0 1.25rem 0 1.4375rem; }
    @media only screen and (min-width: 768px) {
      header .user_navigation {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        height: 32px;
        -webkit-box-pack: justify;
            -ms-flex-pack: justify;
                justify-content: space-between;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center; } }
    header .user_navigation ul.browse, header .user_navigation ul.user_tools {
      display: -webkit-inline-box;
      display: -ms-inline-flexbox;
      display: inline-flex;
      padding: .375rem 0; }
      header .user_navigation ul.browse a, header .user_navigation ul.user_tools a {
        font-size: 12px;
        display: block;
        text-decoration: none;
        text-transform: uppercase; }
    header .user_navigation ul.browse li {
      padding-right: 5px; }
    header .user_navigation ul.browse a {
      color: #666666;
      padding: .2rem .625rem; }
      header .user_navigation ul.browse a.active {
        color: #fff;
        background: #36c3d8; }
      header .user_navigation ul.browse a:hover {
        color: #fff;
        background: #36c3d8; }
    header .user_navigation ul.user_tools li a {
      margin-left: 20px;
      color: #9a9a9a; }
      header .user_navigation ul.user_tools li a.share:before, header .user_navigation ul.user_tools li a.follow:before, header .user_navigation ul.user_tools li a.edit:before, header .user_navigation ul.user_tools li a.arrows:before {
        font-family: FontAwesome, serif;
        margin-right: 5px;
        font-size: larger;
        font-weight: normal; }
      header .user_navigation ul.user_tools li a.share:before {
        content: '\f1e0'; }
      header .user_navigation ul.user_tools li a.follow:before {
        content: '\f006'; }
      header .user_navigation ul.user_tools li a.edit:before {
        content: '\f040'; }
      header .user_navigation ul.user_tools li a.arrows:before {
        margin-right: 0;
        content: '\f0b2'; }
    header .user_navigation ul.user_tools li:first-child a {
      margin-left: 0; }
      @media only screen and (min-width: 768px) {
        header .user_navigation ul.user_tools li:first-child a {
          margin-left: 20px; } }
    header .user_navigation ul.user_tools li:last-child {
      margin-left: 25px; }
  header .logo {
    background-color: #454446; }
    @media only screen and (min-width: 768px) {
      header .logo {
        height: 62px; } }
    header .logo img {
      padding: 5px 0 0 10px;
      vertical-align: middle;
      -webkit-transform: scale(0.8);
          -ms-transform: scale(0.8);
              transform: scale(0.8); }
      @media only screen and (min-width: 768px) {
        header .logo img {
          padding: 0 25px 0 20px;
          vertical-align: middle; } }
    header .logo span {
      color: #7ae6f7;
      font-family: Oswald, serif;
      font-size: 14px;
      font-weight: 400;
      text-transform: uppercase;
      display: block;
      padding: 5px 10px 5px 15px; }
      @media only screen and (min-width: 480px) {
        header .logo span {
          display: inline; } }
      @media only screen and (min-width: 768px) {
        header .logo span {
          line-height: 62px;
          font-size: 18px; } }

.mobile-menu {
  width: 20px;
  height: 19px;
  position: absolute;
  z-index: 10;
  top: 20px;
  right: 20px;
  cursor: pointer; }
  @media only screen and (min-width: 480px) {
    .mobile-menu {
      top: 10px;
      right: 10px; } }
  @media only screen and (min-width: 768px) {
    .mobile-menu {
      display: none; } }
  .mobile-menu::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 20px;
    height: 2px;
    background-color: #FFF;
    -webkit-transform-origin: 0 0;
        -ms-transform-origin: 0 0;
            transform-origin: 0 0;
    -webkit-transition: -webkit-transform .3s ease-out;
    transition: -webkit-transform .3s ease-out;
    -o-transition: transform .3s ease-out;
    transition: transform .3s ease-out;
    transition: transform .3s ease-out, -webkit-transform .3s ease-out; }
  .mobile-menu__middle {
    position: absolute;
    top: 8px;
    left: 0;
    width: 20px;
    height: 2px;
    background-color: #FFF;
    -webkit-transition: all .3s ease-out;
    -o-transition: all .3s ease-out;
    transition: all .3s ease-out;
    -webkit-transform-origin: 0 50%;
        -ms-transform-origin: 0 50%;
            transform-origin: 0 50%; }
  .mobile-menu::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 20px;
    height: 2px;
    background-color: #FFF;
    -webkit-transform-origin: 0 100%;
        -ms-transform-origin: 0 100%;
            transform-origin: 0 100%;
    -webkit-transition: -webkit-transform .3s ease-out;
    transition: -webkit-transform .3s ease-out;
    -o-transition: transform .3s ease-out;
    transition: transform .3s ease-out;
    transition: transform .3s ease-out, -webkit-transform .3s ease-out; }
  .mobile-menu--close::before {
    -webkit-transform: rotate(45deg) scaleX(1.25);
        -ms-transform: rotate(45deg) scaleX(1.25);
            transform: rotate(45deg) scaleX(1.25); }
  .mobile-menu--close .mobile-menu__middle {
    opacity: 0;
    -webkit-transform: scaleX(0);
        -ms-transform: scaleX(0);
            transform: scaleX(0); }
  .mobile-menu--close::after {
    -webkit-transform: rotate(-45deg) scaleX(1.25) translateY(0);
        -ms-transform: rotate(-45deg) scaleX(1.25) translateY(0);
            transform: rotate(-45deg) scaleX(1.25) translateY(0); }

section.geography {
  margin-top: 25px;
  margin-bottom: 40px; }
  @media only screen and (min-width: 992px) {
    section.geography {
      background-image: none; } }
  section.geography .map {
    display: none; }
    @media only screen and (min-width: 992px) {
      section.geography .map {
        display: block;
        max-width: 1052px;
        margin: 0 auto;
        position: relative; } }
    section.geography .map .marker {
      position: absolute;
      -webkit-transition: -webkit-transform .3s ease-out;
      transition: -webkit-transform .3s ease-out;
      -o-transition: transform .3s ease-out;
      transition: transform .3s ease-out;
      transition: transform .3s ease-out, -webkit-transform .3s ease-out;
      cursor: pointer;
      /* Add animation (fade in the popup) */ }
      section.geography .map .marker:hover {
        -webkit-transform: scale(1.2);
            -ms-transform: scale(1.2);
                transform: scale(1.2); }
      section.geography .map .marker .popuptext {
        visibility: hidden;
        width: 160px;
        background-color: #454446;
        color: #fff;
        text-align: center;
        border-radius: 6px;
        padding: 8px 0;
        position: absolute;
        z-index: 1;
        bottom: 125%;
        left: 50%;
        margin-left: -80px; }
        section.geography .map .marker .popuptext::after {
          content: "";
          position: absolute;
          top: 100%;
          left: 50%;
          margin-left: -5px;
          border-width: 5px;
          border-style: solid;
          border-color: #555 transparent transparent transparent; }
      section.geography .map .marker .show {
        visibility: visible;
        -webkit-animation: fadeIn 1s;
        animation: fadeIn 1s; }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }
    section.geography .map img {
      max-width: 100%; }
  section.geography .countries {
    bottom: 0;
    width: 160px;
    position: relative;
    margin: 0 auto; }
    @media only screen and (min-width: 992px) {
      section.geography .countries {
        position: absolute; } }
    section.geography .countries .count__number {
      color: #e1e1e1;
      font-size: 11rem;
      line-height: 1;
      font-weight: 400;
      letter-spacing: -1rem; }
    section.geography .countries .count__text {
      color: #e1e1e1;
      font-size: 1.125rem;
      font-weight: 400;
      text-align: center;
      line-height: 30px; }
    section.geography .countries .way {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex; }
      section.geography .countries .way .employees, section.geography .countries .way .experience {
        width: 50%;
        color: #e1e1e1;
        font-size: .9rem;
        text-align: center; }
        section.geography .countries .way .employees::before, section.geography .countries .way .experience::before {
          display: inline-block;
          border: 1px solid #e1e1e1;
          border-radius: 50%;
          font-family: FontAwesome, serif;
          margin: 14px 0; }
      section.geography .countries .way .employees::before {
        padding: 5px 6px;
        content: '\f0c0'; }
      section.geography .countries .way .experience::before {
        padding: 5px 7px;
        content: '\f250'; }

.main {
  margin-bottom: 40px; }
  @media only screen and (min-width: 768px) {
    .main .row {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
          -ms-flex-direction: row;
              flex-direction: row;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; } }
  .main .details {
    position: relative;
    margin-bottom: 20px;
    -webkit-box-flex: 1;
        -ms-flex: 1 1 auto;
            flex: 1 1 auto; }
    @media only screen and (min-width: 992px) {
      .main .details {
        margin-right: 25px; } }
  .main .personal_info {
    min-height: 400px;
    -webkit-box-flex: 3;
        -ms-flex: 3 1 auto;
            flex: 3 1 auto; }
  .main form input.search {
    width: 100%;
    font-size: 12px;
    color: #7e7e7e;
    padding: 10px;
    border: 1px solid #cdcdcd;
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }
    .main form input.search::-webkit-input-placeholder {
      color: #7e7e7e; }
    .main form input.search:-ms-input-placeholder {
      color: #7e7e7e; }
    .main form input.search::placeholder {
      color: #7e7e7e; }
    .main form input.search:focus {
      outline: none; }
  .main form::before {
    font-family: FontAwesome, serif;
    content: '\f002';
    position: absolute;
    display: block;
    color: #acacac;
    right: 0;
    padding: 10px; }
  .main .actions {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
    .main .actions .request, .main .actions .look {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      font-size: 14px;
      font-weight: 400;
      text-align: center;
      text-transform: uppercase;
      width: 196px;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center;
      height: 60px;
      margin-top: 10px;
      margin-bottom: 10px;
      cursor: pointer; }
      @media only screen and (min-width: 768px) {
        .main .actions .request, .main .actions .look {
          font-size: 16px; } }
    .main .actions .request {
      margin-right: 8px;
      background-color: #a3c644;
      color: #fff;
      -webkit-box-flex: 1;
          -ms-flex: 1 1 auto;
              flex: 1 1 auto; }
      .main .actions .request::before {
        font-family: FontAwesome, serif;
        font-size: 30px;
        content: '\f0b2';
        padding: 10px 6px 10px 10px; }
        @media only screen and (min-width: 768px) {
          .main .actions .request::before {
            font-size: 36px;
            padding: 10px 10px 10px 15px; } }
    .main .actions .look {
      background-color: #937ebd;
      color: #fff;
      -webkit-box-flex: 1;
          -ms-flex: 1 1 auto;
              flex: 1 1 auto; }
      .main .actions .look::before {
        font-family: FontAwesome, serif;
        font-size: 30px;
        content: '';
        padding: 10px 5px 10px 10px; }
        @media only screen and (min-width: 768px) {
          .main .actions .look::before {
            font-size: 36px;
            padding: 10px 15px; } }
  .main .office_info .header_office {
    height: 40px;
    background-color: #999999;
    font-size: 18px;
    font-weight: 400;
    color: #fff;
    text-transform: uppercase;
    text-align: center;
    line-height: 40px; }
  .main .office_info .office_details {
    border: 1px solid #cdcdcd;
    padding: 20px 15px 60px 15px; }
    .main .office_info .office_details .office_location {
      margin-bottom: 10px; }
      .main .office_info .office_details .office_location li {
        display: inline-block;
        color: #666666; }
        .main .office_info .office_details .office_location li::after {
          content: '>';
          margin: 0 5px; }
    .main .office_info .office_details .floors {
      margin-bottom: 15px; }
      .main .office_info .office_details .floors li {
        display: inline-block;
        color: #666666; }
        .main .office_info .office_details .floors li.title {
          display: block;
          margin-bottom: 10px; }
        .main .office_info .office_details .floors li.circle {
          width: 20px;
          height: 20px;
          border-radius: 50%;
          border: 1px solid #666666;
          text-align: center; }
    .main .office_info .office_details .office_numbers {
      color: #666666; }
  .main .personal_info {
    border: 1px solid #cdcdcd; }
    .main .personal_info .tab {
      overflow: hidden;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      background-color: #3ac2d7; }
      .main .personal_info .tab button {
        background-color: inherit;
        border: none;
        outline: none;
        cursor: pointer;
        padding: 14px 16px;
        -webkit-transition: 0.3s;
        -o-transition: 0.3s;
        transition: 0.3s;
        font-size: 12px;
        font-weight: 400;
        text-transform: uppercase;
        color: #fff; }
        .main .personal_info .tab button.active {
          background-color: #fff;
          color: #3ac2d7; }
        .main .personal_info .tab button:hover {
          background-color: #fff;
          color: #3ac2d7; }

table.table-sortable {
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 14px;
  width: 100%;
  border-collapse: collapse; }
  table.table-sortable th {
    padding: 18px 0 15px 0;
    text-align: left;
    border-bottom: 2px solid #d2d2d2; }
    table.table-sortable th.active {
      color: #3ac2d7;
      border-bottom: 2px solid #3ac2d7;
      position: relative; }
      table.table-sortable th.active::after {
        position: absolute;
        font-family: FontAwesome, serif;
        font-size: 22px;
        content: '\f107';
        margin-left: 5px;
        bottom: 10px; }
    table.table-sortable th:first-child {
      padding-left: 15px; }
  table.table-sortable tbody {
    height: 300px;
    overflow-x: auto;
    margin-top: 0; }
    table.table-sortable tbody tr:nth-child(odd) {
      background-color: #f5f5f5; }
  table.table-sortable td {
    padding: 14px 5px 14px 0; }
    @media only screen and (min-width: 768px) {
      table.table-sortable td {
        padding: 14px 0; } }
    table.table-sortable td:first-child {
      padding-left: 15px; }
    table.table-sortable td .label_rejected {
      font-size: 12px;
      color: #fff;
      padding: 5px 12px;
      background-color: #b32746; }
      table.table-sortable td .label_rejected:hover {
        background-color: #d4395b;
        cursor: pointer; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
